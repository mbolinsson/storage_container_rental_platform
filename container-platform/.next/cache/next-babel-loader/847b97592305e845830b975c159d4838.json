{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/marcusbolinsson/Projects/sbfastigheter/container-platform/components/bookContainer/ShowContainer.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"react\";\nimport { getContainer } from \"../../utils/api\";\nimport { useRouter } from \"next/router\";\nvar initialState = {\n  container: null\n};\nexport function ShowContainer() {\n  _s();\n\n  var _useState = useState(initialState),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var router = useRouter();\n  var id = router.query.bookContainer.id;\n  console.log(id);\n  useEffect(function () {\n    function fetch() {\n      return _fetch.apply(this, arguments);\n    }\n\n    function _fetch() {\n      _fetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!id) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 4;\n                return getContainer({\n                  id: id\n                });\n\n              case 4:\n                response = _context.sent;\n                console.log(response.data);\n\n                if (response.data) {\n                  setState(_objectSpread(_objectSpread({}, state), {}, {\n                    container: response.data\n                  }));\n                }\n\n              case 7:\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 9]]);\n      }));\n      return _fetch.apply(this, arguments);\n    }\n\n    fetch();\n  }, [id]);\n  return __jsx(\"div\", {\n    className: styles.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(ShowContainer, \"UrZfBY9+YNT+4DalnFKKefXan+Y=\", false, function () {\n  return [useRouter];\n});\n\n_c = ShowContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowContainer\");","map":{"version":3,"sources":["/Users/marcusbolinsson/Projects/sbfastigheter/container-platform/components/bookContainer/ShowContainer.js"],"names":["React","useEffect","useState","styles","getContainer","useRouter","initialState","container","ShowContainer","state","setState","router","id","query","bookContainer","console","log","fetch","response","data","wrapper"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,OAAnB;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE;AADQ,CAArB;AAIA,OAAO,SAASC,aAAT,GAAyB;AAAA;;AAAA,kBACJN,QAAQ,CAACI,YAAD,CADJ;AAAA,MACvBG,KADuB;AAAA,MAChBC,QADgB;;AAE9B,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AAF8B,MAGzBO,EAHyB,GAGnBD,MAAM,CAACE,KAAP,CAAaC,aAHM,CAGzBF,EAHyB;AAI9BG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AAEAX,EAAAA,SAAS,CAAC,YAAM;AAAA,aACCgB,KADD;AAAA;AAAA;;AAAA;AAAA,wEACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,qBAEQL,EAFR;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAG6BR,YAAY,CAAC;AAACQ,kBAAAA,EAAE,EAAFA;AAAD,iBAAD,CAHzC;;AAAA;AAGYM,gBAAAA,QAHZ;AAIMH,gBAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACC,IAArB;;AACA,oBAAID,QAAQ,CAACC,IAAb,EAAmB;AACjBT,kBAAAA,QAAQ,iCAAKD,KAAL;AAAYF,oBAAAA,SAAS,EAAEW,QAAQ,CAACC;AAAhC,qBAAR;AACD;;AAPP;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUIJ,gBAAAA,OAAO,CAACC,GAAR;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AAcdC,IAAAA,KAAK;AACN,GAfQ,EAeN,CAACL,EAAD,CAfM,CAAT;AAiBA,SACE;AAAK,IAAA,SAAS,EAAET,MAAM,CAACiB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;GA7BeZ,a;UAECH,S;;;KAFDG,a","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport styles from \"react\";\nimport {getContainer} from \"../../utils/api\";\nimport {useRouter} from \"next/router\";\n\nconst initialState = {\n  container: null,\n};\n\nexport function ShowContainer() {\n  const [state, setState] = useState(initialState);\n  const router = useRouter();\n  let {id} = router.query.bookContainer;\n  console.log(id);\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        if (id) {\n          const response = await getContainer({id});\n          console.log(response.data);\n          if (response.data) {\n            setState({...state, container: response.data});\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetch();\n  }, [id]);\n\n  return (\n    <div className={styles.wrapper}>\n      <p>{}</p>\n      <p>{}</p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}