{"ast":null,"code":"var _jsxFileName = \"/Users/marcusbolinsson/Projects/sbfastigheter/container-platform/pages/container/location/[location].js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"./location.module.scss\";\nimport { useRouter } from \"next/router\";\nimport { ContainerCardDeck } from \"../../../components/containerCardDeck/ContainerCardDeck.js\";\nimport { fetchContainers } from \"../../../utils/api\";\nconst initialState = {\n  isLoding: false,\n  data: [],\n  error: null,\n  slotText: styles.displayNone,\n  noSlotText: styles.displayNone\n};\nexport default function locationValue() {\n  const routerObject = useRouter();\n  const {\n    0: state,\n    1: setState\n  } = useState(initialState);\n  const {\n    location\n  } = routerObject.query;\n  useEffect(() => {\n    async function fetch() {\n      try {\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          isLoading: true\n        }));\n\n        if (location) {\n          if (state.data.length > 0) {\n            console.log(\"if\");\n            setState(_objectSpread(_objectSpread({}, state), {}, {\n              slotText: styles.display,\n              noSlotText: styles.displayNone\n            }));\n          } else {\n            console.log(\"else\");\n            setState(_objectSpread(_objectSpread({}, state), {}, {\n              slotText: styles.displayNone,\n              noSlotText: styles.display\n            }));\n          }\n\n          const response = await fetchContainers({\n            location\n          });\n          setState(_objectSpread(_objectSpread({}, state), {}, {\n            isLoading: false,\n            data: response.data\n          }));\n        }\n      } catch (error) {\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          isLoading: false,\n          error\n        }));\n      }\n    }\n\n    fetch();\n  }, [routerObject.query, state.data]);\n  return __jsx(\"main\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: state.slotText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Tillg\\xE4ngliga f\\xF6rr\\xE5d i \", location), __jsx(\"h1\", {\n    className: state.noSlotText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Det finns tyv\\xE4rr inga lediga f\\xF6rr\\xE5d i \", location), __jsx(\"div\", {\n    className: styles.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(ContainerCardDeck, {\n    containers: state.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/marcusbolinsson/Projects/sbfastigheter/container-platform/pages/container/location/[location].js"],"names":["React","useEffect","useState","styles","useRouter","ContainerCardDeck","fetchContainers","initialState","isLoding","data","error","slotText","displayNone","noSlotText","locationValue","routerObject","state","setState","location","query","fetch","isLoading","length","console","log","display","response","main","wrapper"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,iBAAR,QAAgC,4DAAhC;AACA,SAAQC,eAAR,QAA8B,oBAA9B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,KADS;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,QAAQ,EAAER,MAAM,CAACS,WAJE;AAKnBC,EAAAA,UAAU,EAAEV,MAAM,CAACS;AALA,CAArB;AAQA,eAAe,SAASE,aAAT,GAAyB;AACtC,QAAMC,YAAY,GAAGX,SAAS,EAA9B;AACA,QAAM;AAAA,OAACY,KAAD;AAAA,OAAQC;AAAR,MAAoBf,QAAQ,CAACK,YAAD,CAAlC;AACA,QAAM;AAACW,IAAAA;AAAD,MAAaH,YAAY,CAACI,KAAhC;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAemB,KAAf,GAAuB;AACrB,UAAI;AACFH,QAAAA,QAAQ,iCAAKD,KAAL;AAAYK,UAAAA,SAAS,EAAE;AAAvB,WAAR;;AACA,YAAIH,QAAJ,EAAc;AACZ,cAAIF,KAAK,CAACP,IAAN,CAAWa,MAAX,GAAoB,CAAxB,EAA2B;AACzBC,YAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAP,YAAAA,QAAQ,iCAAKD,KAAL;AAAYL,cAAAA,QAAQ,EAAER,MAAM,CAACsB,OAA7B;AAAsCZ,cAAAA,UAAU,EAAEV,MAAM,CAACS;AAAzD,eAAR;AACD,WAHD,MAGO;AACLW,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAP,YAAAA,QAAQ,iCAAKD,KAAL;AAAYL,cAAAA,QAAQ,EAAER,MAAM,CAACS,WAA7B;AAA0CC,cAAAA,UAAU,EAAEV,MAAM,CAACsB;AAA7D,eAAR;AACD;;AACD,gBAAMC,QAAQ,GAAG,MAAMpB,eAAe,CAAC;AAACY,YAAAA;AAAD,WAAD,CAAtC;AACAD,UAAAA,QAAQ,iCAAKD,KAAL;AAAYK,YAAAA,SAAS,EAAE,KAAvB;AAA8BZ,YAAAA,IAAI,EAAEiB,QAAQ,CAACjB;AAA7C,aAAR;AACD;AACF,OAbD,CAaE,OAAOC,KAAP,EAAc;AACdO,QAAAA,QAAQ,iCAAKD,KAAL;AAAYK,UAAAA,SAAS,EAAE,KAAvB;AAA8BX,UAAAA;AAA9B,WAAR;AACD;AACF;;AACDU,IAAAA,KAAK;AACN,GApBQ,EAoBN,CAACL,YAAY,CAACI,KAAd,EAAqBH,KAAK,CAACP,IAA3B,CApBM,CAAT;AAsBA,SACE;AAAM,IAAA,SAAS,EAAEN,MAAM,CAACwB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEX,KAAK,CAACL,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAsDO,QAAtD,CADF,EAEE;AAAI,IAAA,SAAS,EAAEF,KAAK,CAACH,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAAwEK,QAAxE,CAFF,EAGE;AAAK,IAAA,SAAS,EAAEf,MAAM,CAACyB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,iBAAD;AAAmB,IAAA,UAAU,EAAEZ,KAAK,CAACP,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,CADF;AASD","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport styles from \"./location.module.scss\";\nimport {useRouter} from \"next/router\";\nimport {ContainerCardDeck} from \"../../../components/containerCardDeck/ContainerCardDeck.js\";\nimport {fetchContainers} from \"../../../utils/api\";\n\nconst initialState = {\n  isLoding: false,\n  data: [],\n  error: null,\n  slotText: styles.displayNone,\n  noSlotText: styles.displayNone,\n};\n\nexport default function locationValue() {\n  const routerObject = useRouter();\n  const [state, setState] = useState(initialState);\n  const {location} = routerObject.query;\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        setState({...state, isLoading: true});\n        if (location) {\n          if (state.data.length > 0) {\n            console.log(\"if\");\n            setState({...state, slotText: styles.display, noSlotText: styles.displayNone});\n          } else {\n            console.log(\"else\");\n            setState({...state, slotText: styles.displayNone, noSlotText: styles.display});\n          }\n          const response = await fetchContainers({location});\n          setState({...state, isLoading: false, data: response.data});\n        }\n      } catch (error) {\n        setState({...state, isLoading: false, error});\n      }\n    }\n    fetch();\n  }, [routerObject.query, state.data]);\n\n  return (\n    <main className={styles.main}>\n      <h1 className={state.slotText}>Tillgängliga förråd i {location}</h1>\n      <h1 className={state.noSlotText}>Det finns tyvärr inga lediga förråd i {location}</h1>\n      <div className={styles.wrapper}>\n        <ContainerCardDeck containers={state.data} />\n      </div>\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}